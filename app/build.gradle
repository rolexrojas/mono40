apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

def appName = 'tPago'

android {
    packagingOptions {
        exclude 'META-INF/rxjava.properties'
    }

    compileSdkVersion 29
    buildToolsVersion '29.0.2'

    defaultConfig {
        applicationId 'com.tpago.movil'

        renderscriptTargetApi 16
        renderscriptSupportModeEnabled true

        def (major, minor, patch) = [3, 2, 26]
        versionName "${major}.${minor}.${patch}"

        versionCode((major * 10_000_000) + (minor * 100_000) + (patch * 1_000))

        minSdkVersion 19
        targetSdkVersion 29

        multiDexEnabled true

        vectorDrawables.useSupportLibrary = true


        javaCompileOptions {

            annotationProcessorOptions {
                includeCompileClasspath false

                arguments = [
                        'autovaluegson.defaultCollectionsToEmpty'        : 'true',
                        'autovaluegson.mutableAdaptersWithDefaultSetters': 'true'
                ]
            }
        }
    }

    flavorDimensions 'deviceType', 'environment'

    productFlavors {
        mock {
            dimension 'environment'

            def flavorName = 'mock'

            applicationIdSuffix ".${flavorName}"

            resValue 'string', 'app_name', "${appName}-${flavorName}"

            buildConfigField 'boolean', 'MODE_CRASH_REPORTING', 'false'
        }

        devt {
            dimension 'environment'

            def flavorName = 'devt'

            applicationIdSuffix ".${flavorName}"

            resValue 'string', 'app_name', "${appName}-${flavorName}"

            buildConfigField 'boolean', 'MODE_CRASH_REPORTING', 'true'
            buildConfigField 'String', 'API_URL', '"https://tpagonet-dev.gcs-systems.com/api/neo/"'
        }

        stag {
            dimension 'environment'

            def flavorName = 'devt'

            applicationIdSuffix ".${flavorName}"

            resValue 'string', 'app_name', "${appName}-${flavorName}"

            buildConfigField 'boolean', 'MODE_CRASH_REPORTING', 'true'
            buildConfigField 'String', 'API_URL', '"https://tpagonet-dev.gcs-systems.com/api/neo/"'
        }

        prep {
            dimension 'environment'

            def flavorName = 'prep'

            applicationIdSuffix ".${flavorName}"

            resValue 'string', 'app_name', "${appName}-${flavorName}"

            buildConfigField 'boolean', 'MODE_CRASH_REPORTING', 'true'
            buildConfigField 'String', 'API_URL', '"https://tpagonet-dev.gcs-systems.com/api/neo/"'
        }

        prod {
            dimension 'environment'

            resValue 'string', 'app_name', appName

            buildConfigField 'boolean', 'MODE_CRASH_REPORTING', 'true'
            buildConfigField 'String', 'API_URL', '"https://tpagonet.gcs-systems.com/api/neo/"'
        }

//        emulatedDevice {
//            dimension 'deviceType'
//        }

        notEmulatedDevice {
            dimension 'deviceType'
        }
    }

    sourceSets {
        def commonDirName = 'src/common/java'

        devt {
            java.srcDir commonDirName
        }

        stag {
            java.srcDir commonDirName
        }

        prep {
            java.srcDir commonDirName
        }

        prod {
            java.srcDir commonDirName
        }
    }

    signingConfigs {
        debug {
            storeFile rootProject.file('./keystores/debug.jks')
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }

        beta {
            def properties = new Properties()
            rootProject.file('./keystores/beta.properties')
                    .withInputStream { stream -> properties.load(stream) }

            storeFile rootProject.file('./keystores/beta.jks')
            storePassword properties.storePassword
            keyAlias 'soluciones gbh'
            keyPassword properties.keyPassword
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.debug
        }

        beta {
            signingConfig signingConfigs.beta
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            zipAlignEnabled true
        }

        store {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            zipAlignEnabled true
        }
    }

    dexOptions {
        javaMaxHeapSize '4g'
    }

    applicationVariants.all { variant ->
        variant.outputs.all {
            outputFileName = "${appName}-v${variant.versionName}-${variant.name}.apk"
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

repositories {
    // Local repositories
    flatDir {
        dirs 'libs'
    }

    // Remote repositories
    google()
    jcenter()

    maven {
        url 'https://maven.fabric.io/public'
    }

    maven {
        url 'https://jitpack.io'
    }
}

dependencies {
    // Local dependencies
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    // Remote dependencies
    def rxJavaGroupId = 'io.reactivex.rxjava2'
    implementation "${rxJavaGroupId}:rxjava:2.1.4"
    implementation "${rxJavaGroupId}:rxandroid:2.0.1"

    def okHttpGroupId = 'com.squareup.okhttp3'
    def okHttpVersion = '3.9.0'
    implementation "${okHttpGroupId}:okhttp:${okHttpVersion}"
    implementation "${okHttpGroupId}:logging-interceptor:${okHttpVersion}"

    implementation 'com.google.code.gson:gson:2.8.6'

    def retrofitGroupId = 'com.squareup.retrofit2'
    def retrofitVersion = '2.3.0'
    implementation "${retrofitGroupId}:retrofit:${retrofitVersion}"
    implementation "${retrofitGroupId}:converter-gson:${retrofitVersion}"
    implementation "${retrofitGroupId}:adapter-rxjava2:${retrofitVersion}"

    annotationProcessor 'com.google.auto.value:auto-value:1.6.3rc1'
    provided 'com.jakewharton.auto.value:auto-value-annotations:1.5'

    annotationProcessor("com.ryanharter.auto.value:auto-value-gson:1.0.0")
    implementation("com.ryanharter.auto.value:auto-value-gson-runtime:1.0.0")

    annotationProcessor 'com.ryanharter.auto.value:auto-value-parcel:0.2.6'

// Optionally for TypeAdapter support
    implementation 'com.ryanharter.auto.value:auto-value-parcel-adapter:0.2.6'

    def autoValueIgnoreHashEquals = 'com.github.reggar:auto-value-ignore-hash-equals:1.1.4'
    annotationProcessor autoValueIgnoreHashEquals
    compileOnly autoValueIgnoreHashEquals

    def daggerGroupId = 'com.google.dagger'
    def daggerVersion = '2.11'
    implementation "${daggerGroupId}:dagger:${daggerVersion}"
    annotationProcessor "${daggerGroupId}:dagger-compiler:${daggerVersion}"

    implementation 'com.jakewharton.timber:timber:4.5.1'

    implementation('com.crashlytics.sdk.android:crashlytics:2.10.1@aar') {
        transitive = true
    }

    implementation 'com.theartofdev.edmodo:android-image-cropper:2.4.7'

    implementation 'io.github.inflationx:calligraphy3:3.1.1'
    implementation 'io.github.inflationx:viewpump:2.0.3'

    implementation 'com.jakewharton:butterknife:10.1.0'
    annotationProcessor 'com.jakewharton:butterknife-compiler:10.1.0'

    implementation 'com.squareup.picasso:picasso:2.71828'
    implementation 'com.jakewharton.picasso:picasso2-okhttp3-downloader:1.1.0'

    implementation 'com.yqritc:recyclerview-flexibledivider:1.4.0'

    testImplementation 'junit:junit:4.12'

    testImplementation 'org.mockito:mockito-core:2.9.0'

    // Deprecated dependencies
    implementation "${retrofitGroupId}:adapter-rxjava:${retrofitVersion}"
    implementation "com.github.ozodrukh:CircularReveal:2.0.1"
    implementation "com.jakewharton.rxbinding:rxbinding:0.4.0"
    implementation "com.tbruyelle.rxpermissions:rxpermissions:0.9.0"
    implementation "de.hdodenhof:circleimageview:2.1.0"
    implementation "io.reactivex:rxandroid:1.2.1"
    implementation "io.reactivex:rxjava:1.3.3"
    implementation 'com.birbit:android-priority-jobqueue:2.0.1'
    implementation 'jp.wasabeef:picasso-transformations:2.1.0'
    implementation 'com.github.florent37:shapeofview:1.3.2'
    // TODO: Find a replacement. Code it?
    implementation 'javax.annotation:jsr250-api:1.0'

    implementation 'com.journeyapps:zxing-android-embedded:3.6.0'
    implementation 'com.google.zxing:core:3.3.2'
    compile("com.madgag.spongycastle:core:1.58.0.0")
    compile("com.madgag.spongycastle:prov:1.58.0.0")

    implementation 'com.github.kenglxn.QRGen:android:2.6.0'


    implementation 'commons-codec:commons-codec:1.10'
    implementation 'com.google.firebase:firebase-ml-vision:23.0.0'

    implementation 'com.flipboard:bottomsheet-core:1.5.3'
    implementation 'com.flipboard:bottomsheet-commons:1.5.3' // optional

    api 'com.otaliastudios:cameraview:2.1.0'
    implementation 'androidx.recyclerview:recyclerview:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'

    implementation 'com.google.android.material:material:1.0.0'

    implementation 'androidx.percentlayout:percentlayout:1.0.0'

    implementation 'androidx.biometric:biometric:1.0.0-beta02'


}

configurations.all {
    resolutionStrategy.force "com.google.code.gson:gson:2.8.0"
}


apply plugin: 'com.google.gms.google-services'
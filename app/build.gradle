apply plugin: 'com.android.application'
apply plugin: 'me.tatarka.retrolambda'
apply plugin: 'io.fabric'

def appName = 'tPago'

android {
  packagingOptions {
    exclude 'META-INF/rxjava.properties'
  }

  compileSdkVersion 25
  buildToolsVersion '26.0.2'

  defaultConfig {
    applicationId 'com.tpago.movil'

    def (major, minor, patch) = [2, 2, 47]
    versionName "${major}.${minor}.${patch}"
    versionCode ((major * 10_000_000) + (minor * 100_000) + (patch * 1_000))

    minSdkVersion 19
    targetSdkVersion 25

    multiDexEnabled true

    vectorDrawables.useSupportLibrary = true

    javaCompileOptions {
      annotationProcessorOptions {
        includeCompileClasspath false

        arguments = [
          'autovaluegson.defaultCollectionsToEmpty': 'true',
          'autovaluegson.mutableAdaptersWithDefaultSetters': 'true'
        ]
      }
    }
  }

  flavorDimensions 'deviceType', 'environment'

  productFlavors {
    mock {
      dimension 'environment'

      def flavorName = 'mock'

      applicationIdSuffix ".${flavorName}"

      resValue 'string', 'app_name', "${appName}-${flavorName}"

      buildConfigField 'boolean', 'MODE_CRASH_REPORTING', 'true'
      buildConfigField 'String', 'API_URL', 'null'
    }

    development {
      dimension 'environment'

      def flavorName = 'devt'

      applicationIdSuffix ".${flavorName}"

      resValue 'string', 'app_name', "${appName}-${flavorName}"

      buildConfigField 'boolean', 'MODE_CRASH_REPORTING', 'false'
      buildConfigField 'String', 'API_URL', '"http://tpagonet-dev.gcs-systems.com/api/neo/"'
    }

    staging {
      dimension 'environment'

      def flavorName = 'stag'

      applicationIdSuffix ".${flavorName}"

      resValue 'string', 'app_name', "${appName}-${flavorName}"

      buildConfigField 'boolean', 'MODE_CRASH_REPORTING', 'true'
      buildConfigField 'String', 'API_URL', '"https://tpagonet-dev.gcs-systems.com/api/neo/"'
    }

    preproduction {
      dimension 'environment'

      def flavorName = 'prep'

      applicationIdSuffix ".${flavorName}"

      resValue 'string', 'app_name', "${appName}-${flavorName}"

      buildConfigField 'boolean', 'MODE_CRASH_REPORTING', 'false'
      buildConfigField 'String', 'API_URL', '"http://tpagonet-dev.gcs-systems.com/api/neo/"'
    }

    production {
      dimension 'environment'

      resValue 'string', 'app_name', appName

      buildConfigField 'boolean', 'MODE_CRASH_REPORTING', 'true'
      buildConfigField 'String', 'API_URL', '"https://tpagonet.gcs-systems.com/api/neo/"'
    }

    emulatedDevice {
      dimension 'deviceType'
    }

    notEmulatedDevice {
      dimension 'deviceType'
    }
  }

  sourceSets {
    def commonDirName = 'src/common/java'

    development {
      java.srcDirs = [commonDirName, 'src/development/java']
    }

    staging {
      java.srcDirs = [commonDirName, 'src/staging/java']
    }

    production {
      java.srcDirs = [commonDirName, 'src/production/java']
    }
  }

  signingConfigs {
    debug {
      storeFile rootProject.file('keystores/debug.jks')
    }
  }

  buildTypes {
    debug {
      signingConfig signingConfigs.debug
    }

    release {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
    }
  }

  dexOptions {
    javaMaxHeapSize '4g'
  }

  applicationVariants.all { variant ->
    variant.outputs.all {
      outputFileName = "${appName}-v${variant.versionName}-${variant.name}.apk"
    }
  }

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }
}

retrolambda {
  javaVersion JavaVersion.VERSION_1_7
}

repositories {
  // Local repositories
  flatDir {
    dirs 'libs'
  }

  // Remote repositories
  jcenter()

  maven {
    url 'https://maven.google.com'
  }

  maven {
    url 'https://maven.fabric.io/public'
  }

  maven {
    url 'https://jitpack.io'
  }
}

dependencies {
  // Local dependencies
  compile fileTree(include: ['*.jar'], dir: 'libs')

  def cubeSdkName = { version, environment -> "Cub3AltPanSDK-v${version}-${environment}" }
  mockCompile(name: cubeSdkName('1.4.1', 'stag'), ext: 'aar')
  developmentCompile(name: cubeSdkName('1.4.1', 'devt'), ext: 'aar')
  stagingCompile(name: cubeSdkName('1.4.1', 'stag'), ext: 'aar')
  preproductionCompile(name: cubeSdkName('1.4.1', 'prep'), ext: 'aar')
  productionCompile(name: cubeSdkName('1.4.1', 'prod'), ext: 'aar')

  // Remote dependencies
  def rxJavaGroupId = 'io.reactivex.rxjava2'
  compile "${rxJavaGroupId}:rxjava:2.1.4"
  compile "${rxJavaGroupId}:rxandroid:2.0.1"

  def okHttpGroupId = 'com.squareup.okhttp3'
  def okHttpVersion = '3.9.0'
  compile "${okHttpGroupId}:okhttp:${okHttpVersion}"
  compile "${okHttpGroupId}:logging-interceptor:${okHttpVersion}"

  compile 'com.google.code.gson:gson:2.8.1'

  def retrofitGroupId = 'com.squareup.retrofit2'
  def retrofitVersion = '2.3.0'
  compile "${retrofitGroupId}:retrofit:${retrofitVersion}"
  compile "${retrofitGroupId}:converter-gson:${retrofitVersion}"
  compile "${retrofitGroupId}:adapter-rxjava2:${retrofitVersion}"

  compile 'com.birbit:android-priority-jobqueue:2.0.1' // TODO: Find a replacement. Code it?

  def autoValueVersion = '1.5'
  annotationProcessor "com.google.auto.value:auto-value:${autoValueVersion}"
  provided "com.jakewharton.auto.value:auto-value-annotations:${autoValueVersion}"
  def autoValueExtensionGroupId = 'com.ryanharter.auto.value'
  def autoValueGsonExtensionVersion = '0.5.0'
  annotationProcessor "${autoValueExtensionGroupId}:auto-value-gson:${autoValueGsonExtensionVersion}"
  provided "${autoValueExtensionGroupId}:auto-value-gson:${autoValueGsonExtensionVersion}"
  def autoValueParcelExtensionVersion = '0.2.5'
  annotationProcessor "${autoValueExtensionGroupId}:auto-value-parcel:${autoValueParcelExtensionVersion}"

  def daggerGroupId = 'com.google.dagger'
  def daggerVersion = '2.11'
  annotationProcessor "${daggerGroupId}:dagger-compiler:${daggerVersion}"
  compile "${daggerGroupId}:dagger:${daggerVersion}"

  compile 'com.jakewharton.timber:timber:4.5.1'

  compile('com.crashlytics.sdk.android:crashlytics:2.6.8@aar') {
    transitive = true
  }

  compile 'com.theartofdev.edmodo:android-image-cropper:2.4.7'

  compile 'uk.co.chrisjenx:calligraphy:2.3.0'

  def butterKnifeGroupId = 'com.jakewharton'
  def butterKnifeVersion = '8.8.1'
  annotationProcessor "${butterKnifeGroupId}:butterknife-compiler:${butterKnifeVersion}"
  compile "${butterKnifeGroupId}:butterknife:${butterKnifeVersion}"

  compile 'com.squareup.picasso:picasso:2.5.2'
  compile 'com.jakewharton.picasso:picasso2-okhttp3-downloader:1.1.0'

  def supportLibraryGroupId = 'com.android.support'
  def supportLibraryVersion = '25.3.1'
  compile "${supportLibraryGroupId}:appcompat-v7:${supportLibraryVersion}"
  compile "${supportLibraryGroupId}:design:${supportLibraryVersion}"
  compile "${supportLibraryGroupId}:percent:${supportLibraryVersion}"
  compile "${supportLibraryGroupId}:recyclerview-v7:${supportLibraryVersion}"

  compile "${supportLibraryGroupId}.constraint:constraint-layout:1.0.2"

  compile 'com.yqritc:recyclerview-flexibledivider:1.4.0'

  testCompile 'junit:junit:4.12'

  testCompile 'org.mockito:mockito-core:2.9.0'

  // Deprecated dependencies
  compile "${retrofitGroupId}:adapter-rxjava:${retrofitVersion}"
  compile "com.github.ozodrukh:CircularReveal:2.0.1"
  compile "com.jakewharton.rxbinding:rxbinding:0.4.0"
  compile "com.tbruyelle.rxpermissions:rxpermissions:0.9.0"
  compile "de.hdodenhof:circleimageview:2.1.0"
  compile "io.reactivex:rxandroid:1.2.1"
  compile "io.reactivex:rxjava:1.2.2"
  compile 'javax.annotation:jsr250-api:1.0'
  compile 'jp.wasabeef:picasso-transformations:2.1.0'
}

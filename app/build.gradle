apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

android {
  signingConfigs {
    debug {
      storeFile rootProject.file('keystores/debug.jks')
    }
  }

  compileSdkVersion 25
  buildToolsVersion '25.0.2'

  defaultConfig {
    applicationId 'com.tpago.movil'

    minSdkVersion 19
    targetSdkVersion 24

    versionCode 0
    versionName '2.0.0-beta.0'
  }

  buildTypes {
    debug {
      signingConfig signingConfigs.debug
    }
    release {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
    }
  }

  productFlavors {
    def appName = 'tPago'
    def res = [
      type: [string: 'string'],
      key: [appName: 'app_name']
    ]
    def build = [
      type: [boolean: 'Boolean', string: 'String'],
      field: [apiUrl: 'API_URL', report: 'REPORT'],
      value: [true: 'true', false: 'false']
    ]
    development {
      def flavorId = 'dev'
      applicationIdSuffix ".${flavorId}"
      resValue res.type.string, res.key.appName, "${appName}-${flavorId}"
      buildConfigField build.type.boolean, build.field.report, build.value.false
      buildConfigField build.type.string, build.field.apiUrl, '"http://172.19.1.103:8081/api/neo/"'
    }
    staging {
      def flavorId = 'stag'
      applicationIdSuffix ".${flavorId}"
      resValue res.type.string, res.key.appName, "${appName}-${flavorId}"
      buildConfigField build.type.boolean, build.field.report, build.value.true
      buildConfigField build.type.string, build.field.apiUrl, '"https://demo.gcs-systems.com/api/neo/"'
    }
    production {
      resValue res.type.string, res.key.appName, appName
      buildConfigField build.type.boolean, build.field.report, build.value.true
      buildConfigField build.type.string, build.field.apiUrl, 'null'
    }
  }
}

repositories {
  jcenter()
  maven {
    url 'https://maven.fabric.io/public'
  }
  flatDir {
    dirs 'libs'
  }
  maven { url 'https://jitpack.io' }
}

dependencies {
  def autoValueVersion = '1.3'
  provided "com.jakewharton.auto.value:auto-value-annotations:${autoValueVersion}"
  annotationProcessor "com.google.auto.value:auto-value:${autoValueVersion}"

  compile 'com.googlecode.libphonenumber:libphonenumber:8.0.1'

  compile 'io.reactivex:rxjava:1.2.6'
  compile 'io.reactivex.rxjava2:rxjava:2.0.5'

  compile 'com.jakewharton.timber:timber:4.3.1'

  def okHttpVersion = '3.6.0'
  compile "com.squareup.okhttp3:logging-interceptor:${okHttpVersion}"
  compile "com.squareup.okhttp3:okhttp:${okHttpVersion}"

  def retrofitVersion = '2.1.0'
  compile "com.squareup.retrofit2:retrofit:${retrofitVersion}"
  compile "com.squareup.retrofit2:adapter-rxjava:${retrofitVersion}"
  compile "com.squareup.retrofit2:converter-gson:${retrofitVersion}"

  testCompile 'junit:junit:4.12'

  def supportLibraryVersion = '25.1.1'
  compile "com.android.support:appcompat-v7:${supportLibraryVersion}"
  compile "com.android.support:design:${supportLibraryVersion}"
  compile "com.android.support:percent:${supportLibraryVersion}"
  compile "com.android.support:recyclerview-v7:${supportLibraryVersion}"

  compile('com.crashlytics.sdk.android:crashlytics:2.6.6@aar') {
    transitive = true
  }

  def daggerVersion = '2.9'
  compile "com.google.dagger:dagger:${daggerVersion}"
  annotationProcessor "com.google.dagger:dagger-compiler:${daggerVersion}"

  compile 'uk.co.chrisjenx:calligraphy:2.2.0'

  def butterKnifeVersion = '8.5.1'
  compile "com.jakewharton:butterknife:${butterKnifeVersion}"
  annotationProcessor "com.jakewharton:butterknife-compiler:${butterKnifeVersion}"

  compile 'com.yqritc:recyclerview-flexibledivider:1.4.0'

  compile 'de.hdodenhof:circleimageview:2.1.0'
  compile 'com.github.ozodrukh:CircularReveal:2.0.1'

  compile 'com.squareup.picasso:picasso:2.5.2'
  compile 'com.jakewharton.picasso:picasso2-okhttp3-downloader:1.0.2'

  compile 'io.reactivex.rxjava2:rxandroid:2.0.1'
  
  compile 'com.jakewharton.rxbinding:rxbinding:0.4.0'
  compile 'com.tbruyelle.rxpermissions:rxpermissions:0.9.0'

  compile fileTree(include: ['*.jar'], dir: 'libs')
  compile(name: 'CubeSdk', ext: 'aar')
}
